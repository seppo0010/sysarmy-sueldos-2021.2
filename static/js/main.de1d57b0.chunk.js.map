{"version":3,"sources":["model.js","translations.js","App.js","serviceWorker.js","index.js"],"names":["Model","xpathSync","node","path","el","ret","els","treeSync","evaluate","XPathResult","ANY_TYPE","iterateNext","push","xpath","a","tree","features","map","attributes","name","value","predict","row","segments","runSimplePredicate","predicate","fv","parseFloat","field","cv","operator","Error","findScore","condition","length","console","log","nodeName","reduce","acc","v","score","Promise","all","segment","resolve","setTimeout","weight","root","this","reject","fetch","r","then","response","text","str","window","DOMParser","parseFromString","i18n","use","detector","reactI18nextModule","init","resources","fallbackLng","keySeparator","interpolation","escapeValue","regions_map","App","t","state","changedSinceSubmitted","salary","answers","ubicacion","exp","study","employees","activity","duty","occupation","options","degree","specialization","contractType","events","benefits","universities","tech","handleChange","event","setState","key","target","val","Array","isArray","index","indexOf","arr","concat","splice","Object","assign","sort","updateSalary","model","fromEntries","entries","k","enc","join","encodeURIComponent","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","prefixOptions","prefix","filter","f","startsWith","substr","params","className","FormControl","component","required","FormLabel","RadioGroup","aria-label","onChange","FormControlLabel","control","Radio","label","InputLabel","htmlFor","Select","inputProps","id","MenuItem","from","keys","slice","i","x","FormGroup","Checkbox","checked","TextField","type","InputLabelProps","shrink","min","margin","height","ts","Box","bgcolor","color","p","position","top","right","zIndex","format","Component","withNamespaces","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.de1d57b0.chunk.js","sourcesContent":["const FILENAME = 'decision_tree.xml';\n\nexport default class Model {\n    constructor() {\n        this.tree = new Promise(async (resolve, reject) => {\n            const r = await fetch(FILENAME)\n            resolve(r)\n        })\n            .then(response => response.text())\n            .then(str => { return this.treeSync = (new window.DOMParser()).parseFromString(str, \"text/xml\") })\n    }\n\n    xpathSync = (node, path) => {\n        const ns = () => 'http://www.dmg.org/PMML-4_4';\n        const ret = [];\n        let els = this.treeSync.evaluate(path, node, ns, XPathResult.ANY_TYPE, null);\n        let el;\n        while ((el = els.iterateNext())) {\n            ret.push(el)\n        }\n        return ret;\n    }\n\n    xpath = async (node, path) => {\n        await this.tree\n        return this.xpathSync(node, path)\n    }\n\n    features = async () => {\n        return (await this.xpath(await this.tree, '/pmml:PMML/pmml:DataDictionary/pmml:DataField')).map((node) => node.attributes.name.value)\n    }\n\n    predict = async (row) => {\n        const segments = this.xpathSync(await this.tree, '/pmml:PMML/pmml:MiningModel/pmml:Segmentation/pmml:Segment');\n        const runSimplePredicate = (predicate) => {\n            const fv = parseFloat(row[predicate.attributes.field.value] || 0.0);\n            const cv = parseFloat(predicate.attributes.value.value);\n            switch (predicate.attributes.operator.value) {\n                case 'lessThan': return fv < cv;\n                case 'lessOrEqual': return fv <= cv;\n                case 'greaterThan': return fv > cv;\n                case 'greaterOrEqual': return fv >= cv;\n                case 'equal': return fv === cv;\n                default: throw new Error('Unsupported operator: ' + predicate.attributes.operator.value);\n            }\n        }\n        const findScore = (node) => {\n            const condition = this.xpathSync(node, 'pmml:True|pmml:SimplePredicate')\n            if (condition.length !== 1) {\n                throw new Error('Unsupported number of conditions: ' + condition.length)\n            }\nconsole.log(condition[0].nodeName)\n            if (condition[0].nodeName === 'SimplePredicate' && !runSimplePredicate(condition[0])) {\n                return 0.0;\n            }\n            const children = this.xpathSync(node, 'pmml:Node');\n            return children.map(findScore).reduce((acc, v) => acc + v, parseFloat(node.attributes.score ? node.attributes.score.value : 0.0))\n        };\n        return (await Promise.all(segments.map(async (segment) => {\n            await new Promise((resolve) => setTimeout(resolve, 0))\n            const weight = parseFloat(segment.attributes.weight.value)\n            const root = this.xpathSync(segment, 'pmml:TreeModel/pmml:Node')[0]\n            const score = findScore(root);\n            return weight * score;\n        }))).reduce((acc, v) => acc + v, 0.0)\n    }\n}\n","import i18n from \"i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport { reactI18nextModule } from \"react-i18next\";\n\nimport translationEN from './locales/en/translation';\n\n// the translations\nconst resources = {\n};\n\ni18n\n  .use(detector)\n  .use(reactI18nextModule) // passes i18n down to react-i18next\n  .init({\n    resources,\n    fallbackLng: \"es\", // use en if detected lng is not available\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\nexport default i18n;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\n\nimport Model from './model';\nimport './translations';\nimport { withNamespaces } from 'react-i18next';\n\nconst regions_map = {\n    'Ciudad Autónoma de Buenos Aires': 'AMBA',\n    'GBA': 'AMBA',\n    'Catamarca': 'NOA',\n    'Chaco': 'NEA',\n    'Chubut': 'Patagonia',\n    'Corrientes': 'NEA',\n    'Entre Ríos': 'NEA',\n    'Formosa': 'NEA',\n    'Jujuy': 'NOA',\n    'La Pampa': 'Pampa',\n    'La Rioja': 'NOA',\n    'Mendoza': 'Cuyo',\n    'Misiones': 'NEA',\n    'Neuquén': 'Patagonia',\n    'Río Negro': 'Patagonia',\n    'Salta': 'NOA',\n    'San Juan': 'Cuyo',\n    'San Luis': 'Cuyo',\n    'Santa Cruz': 'Patagonia',\n    'Santa Fe': 'Pampa',\n    'Santiago del Estero': 'NOA',\n    'Tucumán': 'NOA',\n    'Córdoba': 'Pampa',\n    'Provincia de Buenos Aires': 'Pampa',\n    'Tierra del Fuego': 'Patagonia',\n};\n\nclass App extends Component {\n  state = {\n    changedSinceSubmitted: true,\n    salary: null,\n    answers: {\n      'Me identifico': '',\n      'Carrera': '',\n      'Universidad': '',\n      'contract-type': '',\n      '¿Sufriste o presenciaste situaciones de violencia laboral?': '',\n      '¿Tenés algún tipo de discapacidad?': '',\n      'Tengo': 18,\n      ubicacion: 'Ciudad Autónoma de Buenos Aires',\n      exp: 0,\n      study: '',\n      'Estado': '',\n      employees: '',\n      activity: '',\n      duty: [],\n      '¿Gente a cargo?': 0,\n      'opensource-contributor': '',\n      'code-as-hobbie': '',\n      occupation: '',\n      'Realizaste cursos de especialización': [],\n      'Plataformas': [],\n      'Lenguajes de programación o tecnologías.': [],\n      'Frameworks, herramientas y librerías': [],\n      'Bases de datos': [],\n      'IDEs': [],\n      'Beneficios extra': [],\n      '¿A qué eventos de tecnología asististe en el último año?': [],\n    },\n    options: {\n        degree: [],\n        specialization: [],\n        occupation: [],\n        duty: [],\n        contractType: [],\n        events: [],\n        benefits: [],\n        universities: [],\n        tech: {\n          'Plataformas': [],\n          'Lenguajes de programación o tecnologías.': [],\n          'Bases de datos': [],\n          'IDEs': [],\n        },\n    },\n    'results': []\n  };\n\n  constructor({t}) {\n    super();\n    this.model = new Model();\n    this.t = t\n    this.formatter = new Intl.NumberFormat('es-AR', {\n      style: 'currency',\n      currency: 'ARS',\n      minimumFractionDigits: 2,\n    });\n  }\n\n  handleChange = async (event) => {\n    this.setState({changedSinceSubmitted: true})\n    const key = event.target.name\n    const val = event.target.value\n    if (Array.isArray(this.state.answers[key])) {\n      const index = this.state.answers[key].indexOf(val)\n      if (index >= 0) {\n        const arr = this.state.answers[key].concat([])\n        arr.splice(index, 1)\n        this.setState({ answers: Object.assign({}, this.state.answers, { [key]: arr }) });\n      } else {\n        this.setState({ answers: Object.assign({}, this.state.answers, { [key]: this.state.answers[key].concat([val]).sort() }) });\n      }\n    } else {\n      this.setState({ answers: Object.assign({}, this.state.answers, { [key]: val }) });\n    }\n    await this.updateSalary();\n  };\n\n  updateSalary = async () => {\n    await this.setState({salary: null})\n    const answers = Object.assign({}, this.state.answers)\n    answers['Dónde estás trabajando'] = answers.ubicacion;\n    answers['Años de experiencia'] = answers.exp;\n    answers['Nivel de estudios alcanzado'] = answers.study;\n    answers['Cantidad de personas en tu organización'] = answers.employees;\n    answers['Actividad principal'] = answers.activity\n    answers['¿Contribuís a proyectos open source?'] = answers['opensource-contributor']\n    answers['¿Programás como hobbie?'] = answers['code-as-hobbie']\n    answers['¿Tenés guardias?'] = answers.duty\n    answers['Trabajo de'] = answers.occupation\n    answers['Tipo de contrato'] = answers['contract-type']\n\n    const salary = await this.model.predict(Object.fromEntries(Object.entries(answers).map(([k, v]) =>\n        'Dónde estás trabajando' === k ? ['region=' + regions_map[v], 1] :\n        (['¿Gente a cargo?', 'Años de experiencia', 'Tengo'].indexOf(k) === -1 ? [k + '=' + v, 1.0] : [k, v])\n    )));\n    await this.setState({salary})\n  }\n\n  enc = val => {\n    if (Array.isArray(val)) {\n      val = val.join(', ')\n    }\n    return encodeURIComponent(val)\n  };\n\n  async componentDidMount() {\n    const t = this.t\n    const features = await this.model.features()\n    const prefixOptions = (prefix) => features.filter((f) => f.startsWith(prefix + '=')).map((f) => f.substr(prefix.length + 1))\n    this.setState({options: {\n      degree: prefixOptions('Carrera').sort().concat([t('Otra')]),\n      universities: prefixOptions('Universidad').sort().concat([t('Otra')]),\n      specialization: prefixOptions('Realizaste cursos de especialización'),\n      occupation: prefixOptions('Trabajo de').sort().concat([t('Otra')]),\n      duty: prefixOptions('¿Tenés guardias?').sort(),\n      contractType: prefixOptions('Tipo de contrato').sort().concat([t('Otro')]),\n      events: prefixOptions('¿A qué eventos de tecnología asististe en el último año?').sort(),\n      benefits: prefixOptions('Beneficios extra').sort(),\n      tech: {\n        'Plataformas': prefixOptions('Plataformas').sort(),\n        'Lenguajes de programación o tecnologías.': prefixOptions('Lenguajes de programación o tecnologías.').sort(),\n        'Bases de datos': prefixOptions('Bases de datos').sort(),\n        'IDEs': prefixOptions('IDEs').sort(),\n      },\n    }});\n    this.updateSalary();\n  }\n\n  render(params) {\n    const t = this.t\n    const {salary} = this.state;\n    const {contractType, duty, occupation, specialization, benefits, events, tech, degree, universities} = this.state.options;\n\n    return (\n      <div className=\"App\">\n        <header>\n        <h1>{t('Predicción de sueldos')}</h1>\n        </header>\n        <h2>{t('Explicación')}</h2>\n        <p>{t('Completá el formulario siguiente y obtené una estimación del sueldo bruto que podrías estar ganando.')}</p>\n        <p>{t('El sueldo se estima de acuerdo a un modelo armado de datos recolectados en la encuesta anónima.')}</p>\n        <p>{t('Los resultados son a fines recreativos y no deben usarse para decisiones de contratación. El modelo discrimina por género, edad y orientación sexual, por lo que hacerlo es probablemente ilegal. La muestra usada no es representativa, por lo que los resultados no pueden generalizarse a la población en general.')}</p>\n        <p>{t('La información se procesa en el browser, así que ningún servidor almacena las evaluaciones que se hagan.')}</p>\n        <hr/>\n        <h2>{t('Formulario interactivo')}</h2>\n        <div>\n          <FormControl component=\"fieldset\" required className=\"form-element\">\n            <FormLabel component=\"legend\">{t('Me identifico')}</FormLabel>\n            <RadioGroup\n              aria-label=\"Me identifico\"\n              name=\"Me identifico\"\n              value={this.state.answers['Me identifico']}\n              onChange={this.handleChange}\n            >\n              <FormControlLabel value=\"Hombre\" control={<Radio />} label={t('Hombre')} />\n              <FormControlLabel value=\"Mujer\" control={<Radio />} label={t('Mujer')} />\n              <FormControlLabel value=\"Otros\" control={<Radio />} label={t('Otros')} />\n            </RadioGroup>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Tengo\">{t('Edad')}</InputLabel>\n            <Select\n              value={this.state.answers['Tengo']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'Tengo',\n                id: 'Tengo',\n              }}\n            >\n              <MenuItem value=\"1\">1 {t('año')}</MenuItem>\n              {Array.from(Array(100).keys()).slice(2).map((i) => <MenuItem value={i} key={i}>{i} {t('años')}</MenuItem>)}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"ubicacion\">{t('Dónde estás trabajando')}</InputLabel>\n            <Select\n              value={this.state.answers['ubicacion']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'ubicacion',\n                id: 'ubicacion',\n              }}\n            >\n              <MenuItem value=\"Catamarca\">Catamarca</MenuItem>\n              <MenuItem value=\"Chaco\">Chaco</MenuItem>\n              <MenuItem value=\"Chubut\">Chubut</MenuItem>\n              <MenuItem value=\"Ciudad Autónoma de Buenos Aires\">{t('Ciudad Autónoma de Buenos Aires')}</MenuItem>\n              <MenuItem value=\"Corrientes\">Corrientes</MenuItem>\n              <MenuItem value=\"Córdoba\">Córdoba</MenuItem>\n              <MenuItem value=\"Entre Ríos\">Entre Ríos</MenuItem>\n              <MenuItem value=\"Formosa\">Formosa</MenuItem>\n              <MenuItem value=\"GBA\">{t('GBA')}</MenuItem>\n              <MenuItem value=\"Jujuy\">Jujuy</MenuItem>\n              <MenuItem value=\"La Pampa\">La Pampa</MenuItem>\n              <MenuItem value=\"La Rioja\">La Rioja</MenuItem>\n              <MenuItem value=\"Mendoza\">Mendoza</MenuItem>\n              <MenuItem value=\"Misiones\">Misiones</MenuItem>\n              <MenuItem value=\"Neuquén\">Neuquén</MenuItem>\n              <MenuItem value=\"Provincia de Buenos Aires\">{t('Provincia de Buenos Aires')}</MenuItem>\n              <MenuItem value=\"Río Negro\">Río Negro</MenuItem>\n              <MenuItem value=\"Salta\">Salta</MenuItem>\n              <MenuItem value=\"San Juan\">San Juan</MenuItem>\n              <MenuItem value=\"San Luis\">San Luis</MenuItem>\n              <MenuItem value=\"Santa Cruz\">Santa Cruz</MenuItem>\n              <MenuItem value=\"Santa Fe\">Santa Fe</MenuItem>\n              <MenuItem value=\"Santiago del Estero\">Santiago del Estero</MenuItem>\n              <MenuItem value=\"Tierra del Fuego\">Tierra del Fuego</MenuItem>\n              <MenuItem value=\"Tucumán\">Tucumán</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"exp\">{t('Años de experiencia')}</InputLabel>\n            <Select\n              value={this.state.answers['exp']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'exp',\n                id: 'exp',\n              }}\n            >\n              <MenuItem value={0}>{t('Menos de un año')}</MenuItem>\n              {Array.from(Array(100).keys()).slice(1).map((i) => <MenuItem value={i} key={i}>{i} {t('años')}</MenuItem>)}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"study\">{t('Nivel de estudios alcanzado')}</InputLabel>\n            <Select\n              value={this.state.answers['study']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'study',\n                id: 'study',\n              }}\n            >\n              <MenuItem value=\"Primario\">{t('Primario')}</MenuItem>\n              <MenuItem value=\"Secundario\">{t('Secundario')}</MenuItem>\n              <MenuItem value=\"Terciario\">{t('Terciario')}</MenuItem>\n              <MenuItem value=\"Universitario\">{t('Universitario')}</MenuItem>\n              <MenuItem value=\"Posgrado\">{t('Posgrado')}</MenuItem>\n              <MenuItem value=\"Doctorado\">{t('Doctorado')}</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Estado\">{t('Estado')}</InputLabel>\n            <Select\n              value={this.state.answers['Estado']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'Estado',\n                id: 'Estado',\n              }}\n            >\n              <MenuItem value=\"En curso\">{t('En curso')}</MenuItem>\n              <MenuItem value=\"Incompleto\">{t('Incompleto')}</MenuItem>\n              <MenuItem value=\"Completado\">{t('Completado')}</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Carrera\">{t('Carrera')}</InputLabel>\n            <Select\n              aria-label=\"Carrera\"\n              name=\"Carrera\"\n              inputProps={{\n                  id: \"Carrera\"\n              }}\n              value={this.state.answers['Carrera']}\n              onChange={this.handleChange}\n            >\n              {degree.map((x) =>\n              <MenuItem\n                key={`degree-${x}`}\n                value={x}\n              >{t(x)}</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Universidad\">{t('Universidad')}</InputLabel>\n            <Select\n              aria-label=\"Universidad\"\n              name=\"Universidad\"\n              inputProps={{\n                  id: \"Universidad\"\n              }}\n              value={this.state.answers['Universidad']}\n              onChange={this.handleChange}\n            >\n              {universities.map((x) =>\n              <MenuItem\n                key={`university-${x}`}\n                value={x}\n              >{t(x)}</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\" component=\"fieldset\">\n            <FormLabel component=\"legend\">{t('Realizaste cursos de especialización')}</FormLabel>\n            <FormGroup style={{'flexDirection': 'column'}}>\n              {specialization.map((x) =>\n              <FormControlLabel\n                key={`specialization-${x}`}\n                control={\n                  <Checkbox\n                    checked={this.state.answers['Realizaste cursos de especialización'].indexOf(x) >= 0}\n                    onChange={this.handleChange}\n                    name=\"Realizaste cursos de especialización\"\n                    value={x}\n                  />\n                }\n                label={t(x)}\n              />\n              )}\n            </FormGroup>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"employees\">{t('Cantidad de personas en tu organización')}</InputLabel>\n            <Select\n              value={this.state.answers['employees']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'employees',\n                id: 'employees',\n              }}\n            >\n              <MenuItem value=\"1-10\">1-10</MenuItem>\n              <MenuItem value=\"11-50\">11-50</MenuItem>\n              <MenuItem value=\"51-100\">51-100</MenuItem>\n              <MenuItem value=\"101-200\">101-200</MenuItem>\n              <MenuItem value=\"201-500\">201-500</MenuItem>\n              <MenuItem value=\"501-1000\">501-1000</MenuItem>\n              <MenuItem value=\"1001-2000\">1001-2000</MenuItem>\n              <MenuItem value=\"2001-5000\">2001-5000</MenuItem>\n              <MenuItem value=\"5001-10000\">5001-10000</MenuItem>\n              <MenuItem value=\"10001+\">10001+</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"activity\">{t('Actividad principal')}</InputLabel>\n            <Select\n              value={this.state.answers['activity']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'activity',\n                id: 'activity',\n              }}\n            >\n              <MenuItem value=\"Servicios / Consultoría de Software / Digital\">{t('Servicios / Consultoría de Software / Digital')}</MenuItem>\n              <MenuItem value=\"Producto basado en Software\">{t('Producto basado en Software')}</MenuItem>\n              <MenuItem value=\"Otras industrias\">{t('Otras industrias')}</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <TextField\n              id=\"¿Gente a cargo?\"\n              name=\"¿Gente a cargo?\"\n              label={t(\"¿Cuánta gente a cargo? (si no tenés, poné 0)\")}\n              value={this.state.answers['¿Gente a cargo?']}\n              onChange={this.handleChange}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              inputProps={{\n                min: 0,\n              }}\n              margin=\"normal\"\n            />\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"opensource-contributor\">{t('¿Contribuís a proyectos open source?')}</InputLabel>\n            <Select\n              aria-label=\"opensource-contributor\"\n              name=\"opensource-contributor\"\n              inputProps={{\n                  id: \"opensource-contributor\"\n              }}\n              value={this.state.answers['opensource-contributor']}\n              onChange={this.handleChange}\n            >\n              <MenuItem value=\"Sí\">{t('Sí')}</MenuItem>\n              <MenuItem value=\"No\">{t('No')}</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"code-as-hobbie\">{t('¿Programás como hobbie?')}</InputLabel>\n            <Select\n              aria-label=\"code-as-hobbie\"\n              name=\"code-as-hobbie\"\n              inputProps={{\n                  id: \"code-as-hobbie\"\n              }}\n              value={this.state.answers['code-as-hobbie']}\n              onChange={this.handleChange}\n            >\n              <MenuItem value=\"Sí\">{t('Sí')}</MenuItem>\n              <MenuItem value=\"No\">{t('No')}</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\" component=\"fieldset\">\n            <FormLabel component=\"legend\">{t('¿Tenés guardias?')}</FormLabel>\n            <FormGroup style={{'flexDirection': 'column'}}>\n              {duty.map((x) =>\n              <FormControlLabel\n                key={`duty-${x}`}\n                control={\n                  <Checkbox\n                    checked={this.state.answers['duty'].indexOf(x) >= 0}\n                    onChange={this.handleChange}\n                    name=\"duty\"\n                    value={x}\n                  />\n                }\n                label={t(x)}\n              />\n              )}\n            </FormGroup>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"occupation\">{t('Trabajo de')}</InputLabel>\n            <Select\n              value={this.state.answers['occupation']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'occupation',\n                id: 'occupation',\n              }}\n            >\n              {occupation.map((x) =>\n              <MenuItem\n                key={`occupation-${x}`}\n                value={x}\n              >{t(x)}</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"contract-type\">{t('Tipo de Contrato')}</InputLabel>\n            <Select\n              aria-label=\"contract-type\"\n              name=\"contract-type\"\n              inputProps={{\n                  id: \"contract-type\"\n              }}\n              value={this.state.answers['contract-type']}\n              onChange={this.handleChange}\n            >\n              {contractType.map((x) =>\n              <MenuItem\n                key={`contractType-${x}`}\n                value={x}\n              >{t(x)}</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\" component=\"fieldset\">\n            <FormLabel component=\"legend\">{t('Tecnologías que utilizás')}</FormLabel>\n            <FormGroup style={{height: '1900px', 'flexDirection': 'column'}}>\n              {Object.keys(tech).map(ts => tech[ts].map((x) =>\n              <FormControlLabel\n                key={`technology-${ts}-${x}`}\n                control={\n                  <Checkbox\n                    checked={this.state.answers[ts].indexOf(x) >= 0}\n                    onChange={this.handleChange}\n                    name={ts}\n                    value={x}\n                  />\n                }\n                label={t(x)}\n              />\n              ))}\n            </FormGroup>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\" component=\"fieldset\">\n            <FormLabel component=\"legend\">{t('Beneficios extra')}</FormLabel>\n            <FormGroup style={{height: '620px', 'flexDirection': 'column'}}>\n              {benefits.map((x) =>\n              <FormControlLabel\n                key={`benefits-${x}`}\n                control={\n                  <Checkbox\n                    checked={this.state.answers['Beneficios extra'].indexOf(x) >= 0}\n                    onChange={this.handleChange}\n                    name=\"Beneficios extra\"\n                    value={x}\n                  />\n                }\n                label={t(x)}\n              />\n              )}\n            </FormGroup>\n          </FormControl>\n        </div>\n        <Box\n          bgcolor=\"grey.700\"\n          color=\"white\"\n          p={2}\n          position=\"fixed\"\n          top={40}\n          right={40}\n          zIndex=\"tooltip\"\n        >\n          {salary ? this.formatter.format(salary) : t('Calculando...')}\n        </Box>\n      </div>\n    );\n  }\n}\n\nexport default withNamespaces()(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}